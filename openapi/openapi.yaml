# -----------------------------------------------------------------------------
# openapi/openapi.yaml
# -----------------------------------------------------------------------------
openapi: 3.0.2
info:
  version:        1.0.0
  title:          taxi.com
  termsOfService: 'https://example.com/terms/'
  contact:
    email:  contact@example.com
    url:    'http://example.com/contact'
  license:
    name:   Apache 2.0
    url:    'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url:    'https://redocly.github.io/openapi-template/logo.png'
  description: >
    ## Taxi.com an OpenAPI Example
    
    Taxi.com is an example API for a fictional rideshare application to 
    demonstrate how to implement the Rest API Design Guidelines using
    the OpenAPI standards.

    The APIs is apartial implementation of a rideshare company and provide 
    the ability to create passengers, drivers, trips, request rides, and 
    pay for rides.

externalDocs:
  description:  Find out how to create a GitHub repo for your OpenAPI definition.
  url:          'https://github.com/Rebilly/generator-openapi-repo'
tags:
  - name:         Passenger
    description:  Rideshare app user that requests a ride to their destination.
  - name:         Passenger Payment
    description:  Passenger payment details.
  - name:         Driver
    description:  Rideshare Driver that picks up Passengers and drives them to their destination for a fee.
servers:
  - url: 'http://example.com/api/v1'
  - url: 'https://example.com/api/v1'
paths:
  /passengers:
    $ref: './paths/passengers/passengers.openapi.yaml'
  /passengers/{passengerId}:
    $ref: './paths/passengers/passengers-by-id.openapi.yaml'
  /passengers/{passengerId}/credit-cards:
    $ref: './paths/passengers/credit-cards/credit-cards.openapi.yaml'
  /drivers:
    $ref: './paths/drivers/drivers.openapi.yaml'
  /drivers/{driverId}:
    $ref: './paths/drivers/drivers-by-id.openapi.yaml'
  /drivers/{driverId}/trips:
    $ref: './paths/drivers/trips/drivers.trips.openapi.yaml'
  /drivers/{driverId}/trips/{tripId}:
    $ref: './paths/drivers/trips/drivers.trips-by-id.openapi.yaml'
  /trips:
    $ref: './paths/trips/trips.openapi.yaml'
  /trips/{tripId}:
    $ref: './paths/trips/trips-by-id.openapi.yaml'
  /trips/{tripId}/pickup:
    $ref: './paths/trips/pickup.openapi.yaml'
  /trips/{tripId}/dropoff:
    $ref: './paths/trips/dropoff.openapi.yaml'
  /trips/{tripId}/pay:
    $ref: './paths/trips/pay.openapi.yaml'
  
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/api/oauth/dialog'
          scopes:
            'read:users': read users info
            'write:users': modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
